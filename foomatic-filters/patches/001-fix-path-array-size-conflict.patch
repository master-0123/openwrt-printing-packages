--- a/foomaticrip.c	2013-11-09 23:42:51.000000000 +0800
+++ b/foomaticrip.c	2025-07-30 23:27:10.845562534 +0800
@@ -167,15 +167,15 @@
 int debug = 0;
 
 /* Path to the GhostScript which foomatic-rip shall use */
-char gspath[PATH_MAX] = "gs";
+char gspath[65536] = "gs";
 
 /* What 'echo' program to use.  It needs -e and -n.  Linux's builtin
 and regular echo work fine; non-GNU platforms may need to install
 gnu echo and put gecho here or something. */
-char echopath[PATH_MAX] = "echo";
+char echopath[65536] = "echo";
 
 /* CUPS raster drivers are searched here */
-char cupsfilterpath[PATH_MAX] = "/usr/local/lib/cups/filter:"
+char cupsfilterpath[65536] = "/usr/local/lib/cups/filter:"
                                 "/usr/local/libexec/cups/filter:"
                                 "/opt/cups/filter:"
                                 "/usr/lib/cups/filter";
@@ -195,15 +195,15 @@
         setenv("PATH", value, 1);
 
     else if (strcmp(key, "cupsfilterpath") == 0)
-        strlcpy(cupsfilterpath, value, PATH_MAX);
+        strlcpy(cupsfilterpath, value, 65536);
     else if (strcmp(key, "preferred_shell") == 0)
         strlcpy(modern_shell, value, 32);
     else if (strcmp(key, "textfilter") == 0)
         set_fileconverter(value);
     else if (strcmp(key, "gspath") == 0)
-        strlcpy(gspath, value, PATH_MAX);
+        strlcpy(gspath, value, 65536);
     else if (strcmp(key, "echo") == 0)
-        strlcpy(echopath, value, PATH_MAX);
+        strlcpy(echopath, value, 65536);
 }
 
 void config_from_file(const char *filename)
@@ -1014,10 +1014,10 @@
 
             if (!ppd_supports_pdf())
             {
-                char pdf2ps_cmd[PATH_MAX];
+                char pdf2ps_cmd[65536];
                 FILE *out, *in;
                 int renderer_pid;
-		char tmpfilename[PATH_MAX] = "";
+		char tmpfilename[65536] = "";
 
                 _log("Driver does not understand PDF input, "
                      "converting to PostScript\n");
@@ -1030,7 +1030,7 @@
 		    int fd;
 		    FILE *tmpfile;
 		    
-		    snprintf(tmpfilename, PATH_MAX, "%s/foomatic-XXXXXX", temp_dir());
+		    snprintf(tmpfilename, 65536, "%s/foomatic-XXXXXX", temp_dir());
 		    fd = mkstemp(tmpfilename);
 		    if (fd < 0) {
 		        _log("Could not create temporary file: %s\n", strerror(errno));
@@ -1060,12 +1060,12 @@
 		   We give priority to Ghostscript here and use Poppler if
 		   Ghostscript is not available. */
 		if (spooler == SPOOLER_CUPS)
-		  snprintf(pdf2ps_cmd, PATH_MAX,
+		  snprintf(pdf2ps_cmd, 65536,
 			   "pdftops '%s' '%s' '%s' '%s' '%s' '%s'",
 			   job->id, job->user, job->title, "1", job->optstr->data,
 			   filename);
 		else
-		  snprintf(pdf2ps_cmd, PATH_MAX,
+		  snprintf(pdf2ps_cmd, 65536,
 			   "gs -q -sstdout=%%stderr -sDEVICE=ps2write -sOutputFile=- "
 			   "-dBATCH -dNOPAUSE -dPARANOIDSAFER -dNOINTERPOLATE %s 2>/dev/null || "
 			   "pdftops -level2 -origpagesizes %s - 2>/dev/null",
